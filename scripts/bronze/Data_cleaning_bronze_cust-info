SELECT * FROM [bronze].[crm_cust_info];
use [bronze].[crm_cust_info]



--check for nulls and duplicates in teh primary key
SELECT
cst_id,
COUNT(*)
FROM [bronze].[crm_cust_info]
GROUP BY cst_id
HAVING COUNT(*)>1 OR cst_id IS NULL


--to remove nulls and duplicates
SELECT * FROM [bronze].[crm_cust_info]
WHERE cst_id = 29466 -- check for a particulat primary key to see how many times it is repeated

SELECT
*
FROM (
	SELECT 
	*, 
	ROW_NUMBER() OVER(PARTITION BY cst_id ORDER BY cst_create_date DESC) as flag_last
	FROM [bronze].[crm_cust_info]
	WHERE cst_id IS NOT NULL
	)t WHERE flag_last = 1
	-- take only the most recent entry per duplicate primary key values
	-- assuming the lates entry is the most updated and having less chance of error


	-- Additional explanation for data cleaning  
-- Remove unwanted spaces in the strings contd.
-- using TRIM function 
-- Uses TRIM() on cst_key
SELECT cst_key
FROM [bronze].[crm_cust_info]
WHERE cst_key != TRIM(cst_key)

SELECT DISTINCT cst_material_status
FROM [bronze].[crm_cust_info]




-- Remove unwanted spaces in the strings
-- using TRIM function
-- Uses TRIM() on cst_firstname and cst_lastname to remove any leading or trailing spaces.
INSERT INTO [Silver].[crm_cust_info] --insert clean data into silver table. this is the final step after data cleaning
		(
		cst_id ,
		cst_key ,
		cst_firstname,
		cst_lastname,
		cst_material_status,
		cst_gndr,
		cst_create_date
	)
-- using TRIM function
-- Uses TRIM() on cst_firstname and cst_lastname to remove any leading or trailing spaces.
-- Remove unwanted spaces in the strings and uniformity across all records
SELECT
	cst_id,
	cst_key,
	TRIM (cst_firstname) AS cst_firstname,
	TRIM (cst_lastname) AS cst_lastname,

--cst_material_status AS cst_marital_status, -- change the spelling of marital status correctly
--Data normalization or Data standarilzation process is done in the following steps
--values to meaningful userfriendly description
-- to modify M and F to Male and Female respectively
-- Uses TRIM() on cst_gender
	CASE 
      WHEN UPPER(TRIM(cst_material_status)) = 'S' THEN 'Single'
      WHEN UPPER(TRIM(cst_material_status)) = 'M' THEN 'Married'
      ELSE 'n/a'
	END AS cst_material_status,

	
-- to modify M and F to Male and Female respectively
-- Uses TRIM() on cst_gender
	CASE 
        WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
        WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
        ELSE 'n/a'
    END AS cst_gndr,
	cst_create_date
FROM -- considring the previously edited table as reference
--Removing duplicates & ensure only one record for each primary key by identifying and retaining only
	(
	SELECT 
	*, 
	ROW_NUMBER() OVER(PARTITION BY cst_id ORDER BY cst_create_date DESC) as flag_last
	FROM [bronze].[crm_cust_info]
	WHERE cst_id IS NOT NULL
	)t WHERE flag_last = 1
-- The alias t is assigned to this subquery so that it can be referenced in the outer query.




